- name: Instalacion de Docker
  hosts: all
  become: yes
  become_user: root
  tasks:
    #### Ubuntu ####
    - name: Update all packages to the latest version
      apt:
        upgrade: full
      tags: apt
      when: ansible_facts['os_family'] == 'Debian'
    - name: Instalacion de packetes requeridos
      apt:
        name: "{{ packages }}"
        state: present
      vars:
        packages:
        - apt-transport-https
        - ca-certificates
        - gnupg-agent
        - software-properties-common
      when: ansible_facts['os_family'] == 'Debian'
    - name: Agrega GPG Key
      apt_key: 
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present
      when: ansible_facts['os_family'] == 'Debian'
    - name: Agregar repositorio
      apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ansible_distribution_release}} stable
      when: ansible_facts['os_family'] == 'Debian'
    ### Centos Redhat ###
    - name: Instalacion de packetes requeridos en Centos-Redhat
      yum:
        name: "{{ packages }}"
      vars:
        packages:
        - yum-utils
        - device-mapper-persistent-data
        - lvm2
      when: ansible_facts['os_family'] == "RedHat"
    - name: Agregar repositorio Centos-Redhat
      shell: yum-config-manager \
            --add-repo \
            https://download.docker.com/linux/centos/docker-ce.repo
      # yum_repository:
      #   name: docker-ce
      #   description: Docker CE YUM repo
      #   baseurl: https://download.docker.com/linux/centos/docker-ce.repo
      when: ansible_facts['os_family'] == "RedHat"
    #### INSTALACION DE DOCKER ####
    - name: Instalaci√≥n Docker CE
      package:
        name:  "{{ packages }}"
      vars:
        packages:
        - docker-ce
        - docker-ce-cli
        - containerd.io
    - name: User
      shell: usermod -aG docker $(whoami)
    ### HABILITANDO SERVICIO ###
    - name: Enable Docker Service
      service:
        name: docker.service
        enabled: yes
    - name: Start Docker
      service:
        name: docker.service
        state: started