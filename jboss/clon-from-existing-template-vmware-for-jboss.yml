- name: VM Creation from Template
  gather_facts: no
  vars_files:
    - ../vcenter_vars.yml
  hosts: localhost
  tasks:
    - name: Clone a virtual machine {{ vm_name }} from existing template {{ template_name }}
      vmware_guest:
        name: "{{ vm_name }}"
        template: "{{ template_name }}"
        hostname: "{{ vcenter_server }}"
        username: "{{ vcenter_user }}"
        password: "{{ vcenter_pass }}"
        validate_certs: no
        folder: "{{ folder }}"
        datacenter: "{{ datacenter }}"
        cluster: "{{ cluster }}"
        # networks:
        #   - name: "{{ network }}"
        #     ip: 10.41.101.235
        #     netmask: 255.255.255.0
        #     gateway: 10.41.101.1
        # customization:
        #   dns_servers: "{{ dns_server }}"
        wait_for_ip_address: no
      register: vm_result
    - debug: var=vm_result
    - name: Get VM "{{ vm_name }}" uuid
      vmware_guest_facts:
        hostname: "{{ vcenter_server }}"
        username: "{{ vcenter_user }}"
        password: "{{ vcenter_pass }}"
        validate_certs: no
        datacenter: "{{ datacenter }}"
        folder: "{{ folder }}"
        name: "{{ vm_name }}"
      register: vm_factss
    - name: Set powerstate of a virtual machine to poweron u poweroff by using UUID (change the state module)
      vmware_guest:
        hostname: "{{ vcenter_server }}"
        username: "{{ vcenter_user }}"
        password: "{{ vcenter_pass }}"
        validate_certs: off
        uuid: "{{ vm_factss.instance.hw_product_uuid }}"
        state: poweredon
      delegate_to: localhost
      wait_for_ip_address: yes
      notify:
        - PowerON
  handlers:
    - name: PowerON
      vmware_guest:
        hostname: "{{ vcenter_server }}"
        username: "{{ vcenter_user }}"
        password: "{{ vcenter_pass }}"
        validate_certs: on
        uuid: "{{ vm_factss.instance.hw_product_uuid }}"
        state: poweredon
      delegate_to: localhost
